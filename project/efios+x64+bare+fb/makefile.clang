library?=../../library
COMPILER=clang	#x86_64-w64-mingw32-gcc
CFLAG="--target=x86_64-unknown-windows -c -ffreestanding -fshort-wchar -fno-stack-check -fno-stack-protector -mno-stack-arg-probe -mno-red-zone -I.. -I../gnu-efi/inc -I../gnu-efi/inc/x86_64 -I../gnu-efi/inc/protocol"
LDFLAG='--target=x86_64-unknown-windows -nostdlib -Wl,-entry:efi_main -Wl,-subsystem:efi_application -fuse-ld=lld-link'
all:libboot0 libboot1 libhard0 libhard1 libsoft0 libsoft1 libuser0 libuser1 gnuefi
	make -f makefile.clang -s link
libboot0:
	make -s -C $(library)/libboot0 efios \
	compiler=$(COMPILER) cflag=$(CFLAG)
libboot1:
	make -s -C $(library)/libboot1 \
	compiler=$(COMPILER) cflag=$(CFLAG)
libhard0:
	make -s -C $(library)/libhard0 barex64 \
	compiler=$(COMPILER) cflag=$(CFLAG)
libhard1:
	make -s -C $(library)/libhard1 \
	compiler=$(COMPILER) cflag=$(CFLAG)
libsoft0:
	make -s -C $(library)/libsoft0 bare \
	compiler=$(COMPILER) cflag=$(CFLAG)
libsoft1:
	make -s -C $(library)/libsoft1 \
	compiler=$(COMPILER) cflag=$(CFLAG)
libuser0:
	make -s -C $(library)/libuser0 efifb \
	compiler=$(COMPILER) cflag=$(CFLAG)
libuser1:
	make -s -C $(library)/libuser1 \
	compiler=$(COMPILER) cflag=$(CFLAG)
gnuefi:
	$(COMPILER) $(CFLAG) -o data.o \
	-I$(library)/gnu-efi/inc \
	-I$(library)/gnu-efi/inc/x86_64 \
	-I$(library)/gnu-efi/inc/protocol \
	$(library)/gnu-efi/lib/data.c
link:
	$(COMPILER) $(LDFLAG) \
	$(library)/libboot0/*.o \
	$(library)/libboot1/*.o \
	$(library)/libhard0/*.o \
	$(library)/libhard1/*.o \
	$(library)/libsoft0/*.o \
	$(library)/libsoft1/*.o \
	$(library)/libuser0/*.o \
	$(library)/libuser1/*.o \
	data.o -o BOOTX64.EFI
clean:
	rm -f *.o *.EFI
	make -C $(library) clean
