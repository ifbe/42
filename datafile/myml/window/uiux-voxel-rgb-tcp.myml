<system>
server{
fmt:TCP
url:0.0.0.0:9999
}
</system>


<artery>
recut{
fmt:recut
}
fftrgb{
fmt:fftrgb
}
</artery>


<supply>
opengl{
fmt:win
title:"42"
width:1024
height:1024
depth:1024
}
</supply>


<entity>
canvas{
fmt:video
}
voxel{
fmt:voxel
}
freecam{
fmt:freecam
}
3dworld{
fmt:3dworld
}

thectx{
fmt:gl41data
}
thewnd{
fmt:gl41wnd0
}
</entity>


<style>
vidhaha{
}
vidgeom{
c: 0.0, 0.0, -1000.0
r: 1000.0, 0.0, 0.0
f: 0.0, 1000.0, 0.0
t: 0.0, 0.0, 1000.0
}

skyhaha{
}
skygeom{
c: 0.0, 0.0, 0.0
r: 1000.0, 0.0, 0.0
f: 0.0, 1000.0, 0.0
t: 0.0, 0.0, 1000.0
}

freemodl{
}
freegeom{
c: 0.0, -2000.0, 0.0
r: 1.0, 0.0, 0.0
t: 0.0, 0.0, 1.0
f: 0.0, 1.0, 0.0
}
freefrus{
l: 0.0, 0.0, 0.0, -1.0
r: 0.0, 0.0, 0.0, 1.0
b: 0.0, 0.0, 0.0, -1.0
t: 0.0, 0.0, 0.0, 1.0
n: 0.0, 0.0, 0.0, 1.0
f: 0.0, 0.0, 0.0, 1000000000.0
}
freerect{
c:0.0, 0.0
q:1.0, 1.0
}
</style>


<relation>
#voxel depends on usbcam
(server, 0, dst) -> (recut, 0, src)
(recut, 0, dst) -> (canvas, 0, yuv)

(recut, 0, dst) -> (fftrgb, 0, src)
(fftrgb, 0, dst) -> (voxel, 0, pcm)

#3dworld depends on inner objects
(3dworld, vidgeom, 0) -> (canvas, vidhaha, 0)
(3dworld, skygeom, 0) -> (voxel, skyhaha, 0)
(3dworld, freegeom, 0) -> (freecam, freemodl, 0)

#glctx depends on scene
(thectx, 0, 0) -> (3dworld, 0, 0)

#glwnd depends on ctx + cam
(thewnd, 0, ctx) -> (thectx, 0, 0)
(thewnd, freerect, mvp) -> (freecam, freefrus, 0)

#opengl depends on ctx + wnd
(opengl, 0, ctx) -> (thectx, 0, 0)
(opengl, 0, wnd) -> (thewnd, 0, 0)

</relation>
