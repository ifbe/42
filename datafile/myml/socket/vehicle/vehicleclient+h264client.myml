
<entity>
canvas{
fmt:video
format:yuvx
width:640
height:480
}
freecam{
fmt:freecam
}
virtual{
fmt:virtual
}
vkbd{
fmt:vkbd
}
</entity>


<supply>
std{
fmt:std
}
opengl{
fmt:wnd
title:"42"
}
codec{
fmt:h264dec
}
</supply>


<artery>
vehicle{
fmt:vehicle
}
recut{
fmt:recut
arg:384000
}
picfmt{
fmt:picfmt
srcfmt:yyyy,u,v
srcw:640
srch:480
dstfmt:yuvx
dstw:640
dsth:480
}
</artery>


<system>
tcpcmd{
fmt:tcp
#arg:192.168.5.150:9999
arg:picar.deepstack.tech:10000
}
tcpvid{
fmt:tcp
#arg:192.168.5.150:9999
arg:picar.deepstack.tech:9999
}
</system>


<style>
skyhaha{
}
skygeom{
c: 0.0, 0.0, 0.0
r: 640.0, 0.0, 0.0
f: 0.0, 480.0, 0.0
t: 0.0, 0.0, 1000.0
}

freemodl{
}
freegeom{
c: 0.0, 0.0, 640.0
r: 640.0, 0.0, 0.0
t: 0.0, 640.0, 0.0
f: 0.0, 0.0, -640.0
L: 0.0, 0.0, 0.0, -1.0
R: 0.0, 0.0, 0.0, 1.0
B: 0.0, 0.0, 0.0, -1.0
T: 0.0, 0.0, 0.0, 1.0
N: 0.0, 0.0, 0.0, 1.0
F: 0.0, 0.0, 0.0, 1000000000.0
}

freerect{
c:0.0, 0.0
q:1.0, 1.0
}
vkbdrect{
c:0.1, 0.0
q:0.8, 0.4
}
</style>


<relation>
#vehicle client
(@tcpcmd, dst@0) -> (@vehicle, sock@0)
(@std, dst@0) -> (@vehicle, std@0)
(@vkbd, evto@0) -> (@vehicle, std@0)

#canvas depends on usbcam
(tcpvid, 0, dst) -> (recut, 0, src)
(recut, 0, dst) -> (codec, 0, bs)
(codec, 0, img) -> (picfmt, 0, src)
(picfmt, 0, dst) -> (canvas, 0, rgb)

#virtual depends on inner objects
(virtual, skygeom, 0) -> (canvas, skyhaha, 0)
(virtual, freegeom, 0) -> (freecam, freemodl, 0)

#glwnd depends on ctx + cam
(opengl, freerect, 0) -> (freecam, 0, 0)
(opengl, vkbdrect, 0) @ (vkbd, 0, 0)
</relation>
