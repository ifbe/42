<entity>
canvas{
fmt:video
}
freecam{
fmt:freecam
}
virtual{
fmt:virtual
}
</entity>


<supply>
opengl{
fmt:wnd
title:"42"
width:1024
height:1024
depth:1024
}
speaker{
fmt:spk
}
usbcam{
fmt:cam
}
usbmic{
fmt:mic
}
stdio{
fmt:std
}
</supply>


<artery>
goslow{
fmt:goslow
}
arecut{
fmt:recut
url:2048
}
vrecut{
fmt:vrecut
}
themux{
fmt:mediamux
}
client{
fmt:tcptrav
}
</artery>


<system>
socket{
fmt:tcp
url:deepstack.tech:9999
}
</system>


<worker>
poller{
fmt:poller
}
</worker>


<style>
skyhaha{
}
skygeom{
c: 0.0, 0.0, 0.0
r: 640.0, 0.0, 0.0
f: 0.0, 480.0, 0.0
t: 0.0, 0.0, 1000.0
}

freemodl{
}
freegeom{
c: 0.0, 0.0, 640.0
r: 640.0, 0.0, 0.0
t: 0.0, 640.0, 0.0
f: 0.0, 0.0, -640.0
L: 0.0, 0.0, 0.0, -1.0
R: 0.0, 0.0, 0.0, 1.0
B: 0.0, 0.0, 0.0, -1.0
T: 0.0, 0.0, 0.0, 1.0
N: 0.0, 0.0, 0.0, 1.0
F: 0.0, 0.0, 0.0, 1000000000.0
}

freerect{
c:0.0, 0.0
q:1.0, 1.0
}
</style>


<relation>
#show video to window
(virtual, skygeom, 0) -> (canvas, skyhaha, 0)
(virtual, freegeom, 0) -> (freecam, freemodl, 0)
(opengl, freerect, 0) -> (freecam, 0, 0)

#client
(stdio, 0, dst) -> (client, 0, std)
(socket, 0, dst) -> (client, 0, src)
(themux, 0, src) -> (client, 0, dst)

#peer audio from mux
(themux, 0, a0to) -> (arecut, 0, src)
(arecut, 0, dst) -> (speaker, 0, src)

#peer video from mux
(themux, 0, v0to) -> (vrecut, 0, src)
(vrecut, 0, dst) -> (canvas, 0, yuv)

#self audio into mux
(usbmic, 0, dst) -> (themux, 0, a0by)

#self video into mux
(usbcam, 0, dst) -> (goslow, 0, src)
(goslow, 0, dst) -> (themux, 0, v0by)
</relation>
